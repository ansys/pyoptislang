
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/osl_server/02_raw_communication.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_osl_server_02_raw_communication.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_osl_server_02_raw_communication.py:


.. _ref_osl_server_raw:

Raw communication with osl server
---------------------------------

This example demonstrates how to use PyOptiSLang to perform raw
queries/commands on the optiSLang server using the commands and
queries convenience classes.

.. GENERATED FROM PYTHON SOURCE LINES 14-17

Perform required imports
~~~~~~~~~~~~~~~~~~~~~~~~
Perform the required imports.

.. GENERATED FROM PYTHON SOURCE LINES 17-27

.. code-block:: default


    from pathlib import Path
    import tempfile

    from ansys.optislang.core import Optislang
    from ansys.optislang.core import server_commands as commands
    from ansys.optislang.core import server_queries as queries
    import ansys.optislang.core.examples as examples
    from ansys.optislang.core.project_parametric import Parameter


.. GENERATED FROM PYTHON SOURCE LINES 28-31

Create optiSLang instance
~~~~~~~~~~~~~~~~~~~~~~~~~
Create the optiSLang instance.

.. GENERATED FROM PYTHON SOURCE LINES 31-39

.. code-block:: default


    example_path = examples.get_files("ten_bar_truss")[1][0]
    tmp_dir = Path(tempfile.mkdtemp())
    file_path = tmp_dir / "evaluate_design_example.opf"

    osl = Optislang(project_path=example_path)
    osl.save_as(file_path)


.. GENERATED FROM PYTHON SOURCE LINES 40-44

Modify root project parameters
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Use raw osl server communication to modify the first parameter
on project root level.

.. GENERATED FROM PYTHON SOURCE LINES 44-84

.. code-block:: default


    # Get the first parameter on project root level
    root_system_uid = osl.project.root_system.uid
    root_system_properties = osl.get_osl_server().send_command(
        queries.actor_properties(uid=root_system_uid)
    )
    root_system_pm_raw = root_system_properties["properties"]["ParameterManager"]

    first_parameter = Parameter.from_dict(root_system_pm_raw["parameter_container"][0])

    # Print out the reference value
    print(f'Parameter "{first_parameter.name}" reference value: {first_parameter.reference_value}')

    # Modify the reference value
    first_parameter.reference_value = 15.0

    # Adapt the parameter manager to the changes and
    # send the modified parameter manager back to optiSLang
    root_system_pm_raw["parameter_container"][0] = first_parameter.to_dict()

    server_response = osl.get_osl_server().send_command(
        commands.set_actor_property(
            actor_uid=root_system_uid, name="ParameterManager", value=root_system_pm_raw
        )
    )

    print(f'Modifying parameter reference value: {server_response[0]["status"]}')

    # Get and print the (now modified) first parameter on project root level
    root_system_properties = osl.get_osl_server().send_command(
        queries.actor_properties(uid=root_system_uid)
    )
    root_system_pm_raw = root_system_properties["properties"]["ParameterManager"]

    modified_first_parameter = Parameter.from_dict(root_system_pm_raw["parameter_container"][0])

    print(
        f'Modified parameter "{modified_first_parameter.name}" reference value: {modified_first_parameter.reference_value}'
    )


.. GENERATED FROM PYTHON SOURCE LINES 85-88

Stop and cancel project
~~~~~~~~~~~~~~~~~~~~~~~
Stop and cancel the project.

.. GENERATED FROM PYTHON SOURCE LINES 88-90

.. code-block:: default


    osl.dispose()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)


.. _sphx_glr_download_examples_osl_server_02_raw_communication.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 02_raw_communication.py <02_raw_communication.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 02_raw_communication.ipynb <02_raw_communication.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
